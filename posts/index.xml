<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on piotrek-k.pl</title><link>https://piotrek-k.pl/posts/</link><description>Recent content in Posts on piotrek-k.pl</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© 2022 Piotr Kozerski</copyright><lastBuildDate>Sun, 11 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://piotrek-k.pl/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Sandboxing using Docker - cheatsheet</title><link>https://piotrek-k.pl/posts/sandboxing/</link><pubDate>Sun, 11 Jun 2023 20:06:59 +0200</pubDate><guid>https://piotrek-k.pl/posts/sandboxing/</guid><description>The following cheatsheet is meant to show how to use Docker to sandbox untrusted code. The goal is to minimize the damage that could be made by malicius code downloaded from untrusted source.
Running a code this way allows to:
prevent code from accessing the rest of the filesystem easily revert all changes run a code with near native performance control network access run processes as superuser without giving them controll of entire device More on Docker security</description></item></channel></rss>